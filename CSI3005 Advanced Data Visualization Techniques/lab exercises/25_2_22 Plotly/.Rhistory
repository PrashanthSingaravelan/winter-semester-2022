fig <- plot_ly(type='pie', labels=manufacturer, values=factor(manufacturer),
textinfo='label+percent',
insidetextorientation='radial')
fig <- plot_ly(type='pie', labels=df2$manufacturer, values=factor(df2$manufacturer),
textinfo='label+percent',
insidetextorientation='radial')
fig
ggplot(df1, aes(x = reorder(cut, -price),y = price)) +
geom_bar(stat = "identity", fill = "indianred3", color = "black")
#plot_ly(df1, x=~cut, y=~price, type='bar', name='price')
ggplot(df1, aes(x = reorder(cut, -price),y = price)) +
geom_bar(stat = "identity", fill = "indianred3", color = "black") +
labs(x = "Cut", y = "Price", title  = "Participants by race")
#plot_ly(df1, x=~cut, y=~price, type='bar', name='price')
ggplot(df1, aes(x = reorder(cut, -price),y = price)) +
geom_bar(stat = "identity", fill = "indianred3", color = "black") +
geom_text(aes(label = pctlabel), vjust = -0.25) +
scale_y_continuous(labels = percent) +
labs(x = "Cut", y = "Price", title  = "Participants by race")
ggplot(df1, aes(x = reorder(cut, -price),y = price)) +
geom_bar(stat = "identity", fill = "indianred3", color = "black") +
geom_text(aes(label = pctlabel), vjust = -0.25) +
scale_y_continuous(labels = price) +
labs(x = "Cut", y = "Price", title  = "Participants by race")
ggplot(df1, aes(x = reorder(cut, -price),y = price)) +
geom_bar(stat = "identity", fill = "indianred3", color = "black") +
geom_text(aes(label = pctlabel), vjust = -0.25) +
labs(x = "Cut", y = "Price", title  = "Participants by race")
df1 = diamonds
head(df1)
table(df1$cut)
df1.info()
str(df1)
info(df1)
str(df1)
summary(df1)
cat("Number of instances  : " + nrow(df1))
cat("Number of instances  : " + nrow(df1))
print("Number of instances  : " + nrow(df1))
nrow(df1)
print("Number of instances  : ",nrow(df1))
cat("Number of instances  : ",nrow(df1))
print("Number of attributes : ",ncol(df1))
cat("Number of instances  : ",nrow(df1))
cat("Number of attributes : ",ncol(df1))
cat("Number of instances  : ",nrow(df1))
cat("\nNumber of attributes : ",ncol(df1))
summary(df1)
ggplot(df1, aes(x = cut)) +
geom_bar()
df2 = mpg
head(df2)
df2 %>%
summarize(variable = "cty",
q0.2 = quantile(cty, 0.2), ## 20% city values
q0.4 = quantile(cty, 0.4), ## 40% cty values
q0.6 = quantile(cty, 0.6), ## 60% cty values
q0.8 = quantile(cty, 0.8)) ## 80% cty values
df2 %>%
summarize(
variable = "cty",
mean = mean(cty),
variance = var(cty),
standard_deviation = sd(cty),
Inter_Quartile_Range = IQR(cty)
)
ggplot(df2, aes(factor(cyl),
fill = factor(cyl))) +
geom_bar()
ggplot(df1, aes(x = cut)) +
aes(factor(cyl),
fill = factor(cyl))) + geom_bar()
ggplot(df1, aes(x = cut)) +
aes(factor(cyl),
fill = factor(cyl)) + geom_bar()
ggplot(df1, aes(x = cut)) +
aes(factor(cut),
fill = factor(cut)) + geom_bar()
ggplot(df1, aes(factor(cut),
fill = factor(cut)) + geom_bar()
ggplot(df1, aes(factor(cut)),
fill = factor(cut)) + geom_bar()
ggplot(df1, aes(factor(cut),
fill = factor(cut))) +
geom_bar()
ggplot(df1, aes(factor(cut),
fill = factor(cut))) +
geom_bar() +
labs(x = "Cut",
y = "Count",
title  = "Participants of Cut")
?diamonds
ggplot(df1, aes(factor(cut),
fill = factor(cut))) +
geom_bar() +
labs(
x = "Cut", y = "Count", title  = "Count of the quality of the Cut")
table(df1$cut)
ggplot(df1, aes(factor(cut),
fill = factor(cut))) +
geom_bar(color='black) +
labs(
x = "Cut", y = "Count", title  = "Count of the quality of the Cut")
ggplot(df1, aes(factor(cut),
fill = factor(cut))) +
geom_bar(color='black') +
labs(
x = "Cut", y = "Count", title  = "Count of the quality of the Cut")
ggplot(Marriage,
aes(x = race,
y = ..count.. / sum(..count..))) +
geom_bar() +
labs(x = "Race",
y = "Percent",
title  = "Participants by race") +
scale_y_continuous(labels = scales::percent)
ggplot(df2,
aes(x = cut,
y = ..count.. / sum(..count..))) +
geom_bar() +
labs(x = "Race",
y = "Percent",
title  = "Participants by race") +
scale_y_continuous(labels = scales::percent)
ggplot(df2,
aes(x = 'cut',
y = ..count.. / sum(..count..))) +
geom_bar() +
labs(x = "Race",
y = "Percent",
title  = "Participants by race") +
scale_y_continuous(labels = scales::percent)
ggplot(df1,
aes(x = cut,
y = ..count.. / sum(..count..))) +
geom_bar() +
labs(x = "Race",
y = "Percent",
title  = "Participants by race") +
scale_y_continuous(labels = scales::percent)
ggplot(df1,
aes(x = cut,
y = ..count.. / sum(..count..)),
fill = factor(cut)) +
geom_bar() +
labs(x = "Cut",
y = "Count",
title  = "Count of the quality of the Cut") +
scale_y_continuous(labels = scales::percent)
ggplot(df1,
aes(x = factor(cut),
y = ..count.. / sum(..count..)),
fill = factor(cut)) +
geom_bar() +
labs(x = "Cut",
y = "Count",
title  = "Count of the quality of the Cut") +
scale_y_continuous(labels = scales::percent)
ggplot(df1,
aes(x = factor(cut),
y = ..count.. / sum(..count..),
fill = factor(cut))) +
geom_bar(color='black') +
labs(x = "Cut", y = "Count", title  = "Count of the quality of the Cut") +
scale_y_continuous(labels = scales::percent)
ggplot(df1,
aes(x = factor(cut), y = ..count.. / sum(..count..),fill = factor(cut))) +
geom_bar(color='black') +
labs(x = "Cut", y = "Percentage of Respective Cut",
title  = "Percentage of the quality of the Cut") +
scale_y_continuous(labels = scales::percent)
ggplot(df1, aes(factor(cut),
fill = factor(cut))) +
geom_bar(color='black') +
geom_text(aes(label = factor(cut)), vjust=-0.5)+
labs(x = "Cut", y = "Count", title  = "Count of the quality of the Cut")
ggplot(df1, aes(factor(cut),
fill = factor(cut))) +
geom_bar(color='black') +
geom_text(aes(label = factor(cut)), vjust=-0.5)+
labs(x = "Cut", y = "Count", title  = "Count of the quality of the Cut")
ggplot(df1, aes(factor(cut),
fill = factor(cut))) +
geom_bar(color='black') +
labs(
x = "Cut", y = "Count", title  = "Count of the quality of the Cut")
ggplot(df1, aes(factor(cut),fill = factor(cut))) +
geom_bar(color='black') +
labs(x = "Cut", y = "Count", title  = "Count of the quality of the Cut")
ggplot(df1, aes(x=factor(cut),fill = factor(cut))) +
geom_bar(color='black') +
labs(x = "Cut", y = "Count", title  = "Count of the quality of the Cut")
ggplot(df1,
aes(x = factor(cut), y = ..count.. / sum(..count..),fill = factor(cut))) +
geom_bar(color='black') +
labs(x = "Cut", y = "Percentage of Cuts", title  = "Percentage of the quality of the Cut") +
scale_y_continuous(labels = scales::percent)
ggplot(df2, aes(factor(manufacturer),
fill = factor(manufacturer))) +
geom_bar() + coord_flip()
fig <- plot_ly(type='pie', labels=df2$manufacturer, values=factor(df2$manufacturer),
textinfo='label+percent',
insidetextorientation='radial')
fig
ggplot(df2, aes(factor(manufacturer),fill = factor(manufacturer))) +
geom_bar(color='black') +
labs(x = "Count", y = "Manufactures", title  = "Participation of Manufactures") +
coord_flip()
ggplot(df2, aes(factor(cyl),fill = factor(cyl))) +
geom_bar(color='black')
ggplot(df2,
aes(x = factor(cyl), y = ..count.. / sum(..count..),fill = factor(cyl))) +
geom_bar(color='black') +
labs(x = "Cylinders", y = "Count", title  = "Role of Number of Cylinders") +
scale_y_continuous(labels = scales::percent
ggplot(df2,
aes(x = factor(cyl), y = ..count.. / sum(..count..),fill = factor(cyl))) +
geom_bar(color='black') +
labs(x = "Cylinders", y = "Count", title  = "Role of Number of Cylinders") +
scale_y_continuous(labels = scales::percent)
ggplot(df,
aes(fill = manufacturer,
area = n,
label = manufacturer)) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre") +
labs(title = "Marriages by officiate") +
theme(legend.position = "none")
classfreq = df2$class
plot_ly(data=df2$class, labels=-Var1, values=-Freq, type='pie', colors='Spectral')
classfreq = data.frame(table(df2$class))
plot_ly(data=classfreq, labels=-Var1, values=-Freq, type='pie', colors='Spectral')
classfreq = data.frame(table(df2$class))
plot_ly(data=classfreq, labels=-Var1, values=-Freq, type='pie', colors='Spectral')
df2 %>%
ggplot(aes(cty)) +
geom_histogram(binwidth = 1.25, color = "black",fill = "grey") +
labs(
title = "Distribution of cty",
x = "city",
y = "Number of cars"
)
df2 %>%
ggplot(aes(drv,cty)) +
geom_boxplot() +
labs(title = "Distribution of cty relative to Driving Mode",
x = "Driving Mode",
y = "cty-value")
df2 %>%
group_by(drv) %>%
summarize(mean_cty = mean(cty), Standard_Deviation_cty = sd(cty))
df2 %>%
group_by(drv) %>%
summarize(mean_cty = mean(cty), Standard_Deviation_cty = sd(cty))
cat("Number of instances  : ",nrow(df2))
cat("\nNumber of attributes : ",ncol(df2))
str(df2)
summary(df2)
ggplot(df2,
aes(x = factor(cyl), y = ..count.. / sum(..count..),fill = factor(cyl))) +
geom_bar(color='black') +
labs(x = "Cylinders", y = "Percentage of Cylinders", title  = "Role of Number of Cylinders") +
scale_y_continuous(labels = scales::percent)
ggplot(df2, aes(factor(manufacturer),fill = factor(manufacturer))) +
geom_bar(color='black') +
labs(x = "Count", y = "Manufactures", title  = "Participation of Manufactures") +
coord_flip()
ggplot(df,
aes(fill = manufacturer,
area = n,
label = manufacturer)) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre") +
labs(title = "Marriages by officiate") +
theme(legend.position = "none")
df2 %>%
ggplot(aes(cty)) +
geom_histogram(binwidth = 1.25, color = "black",fill = "grey") +
labs(
title = "Distribution of cty",
x = "city",
y = "Number of cars"
)
df2 %>%
ggplot(aes(drv,cty)) +
geom_boxplot() +
labs(title = "Distribution of cty relative to Driving Mode",
x = "Driving Mode",
y = "cty-value")
fig <- plot_ly(type='pie', labels=df2$manufacturer, values=count(dfmanufacturer),
textinfo='label+percent',
insidetextorientation='radial')
fig <- plot_ly(type='pie', labels=df2$manufacturer, values=count(df2$manufacturer),
textinfo='label+percent',
insidetextorientation='radial')
classfreq = data.frame(table(df2$class))
plot_ly(data=classfreq, labels=-Var1, values=-Freq, type='pie', colors='Spectral')
ggplot(df,
aes(fill = manufacturer,
area = n,
label = manufacturer)) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre") +
labs(title = "Marriages by officiate") +
theme(legend.position = "none")
ggplot(df2, aes(x = price)) +
geom_density() +
labs(title = "Participants by age")
ggplot(df2, aes(x = price)) +
geom_density() +
labs(title = "Participants by age")
df2 = mpg
head(df2)
cat("Number of instances  : ",nrow(df2))
cat("\nNumber of attributes : ",ncol(df2))
str(df2)
summary(df2)
df2 %>%
summarize(variable = "cty",
q0.2 = quantile(cty, 0.2), ## 20% city values
q0.4 = quantile(cty, 0.4), ## 40% cty values
q0.6 = quantile(cty, 0.6), ## 60% cty values
q0.8 = quantile(cty, 0.8)) ## 80% cty values
df2 %>%
summarize(
variable = "cty",
mean = mean(cty),
variance = var(cty),
standard_deviation = sd(cty),
Inter_Quartile_Range = IQR(cty)
)
df2 %>%
group_by(drv) %>%
summarize(mean_cty = mean(cty), Standard_Deviation_cty = sd(cty))
ggplot(df2,
aes(x = factor(cyl), y = ..count.. / sum(..count..),fill = factor(cyl))) +
geom_bar(color='black') +
labs(x = "Cylinders", y = "Percentage of Cylinders", title  = "Role of Number of Cylinders") +
scale_y_continuous(labels = scales::percent)
ggplot(df2, aes(factor(manufacturer),fill = factor(manufacturer))) +
geom_bar(color='black') +
labs(x = "Count", y = "Manufactures", title  = "Participation of Manufactures") +
coord_flip()
ggplot(df,
aes(fill = manufacturer,
area = n,
label = manufacturer)) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre") +
labs(title = "Marriages by officiate") +
theme(legend.position = "none")
ggplot(df2, aes(x = price)) +
geom_density() +
labs(title = "Participants by age")
colnames(df2)
ggplot(df2, aes(x = year)) +
geom_density() +
labs(title = "Participants by age")
ggplot(df2, aes(x = year)) +
geom_density() +
labs(title = "Participants by Year")
ggplot(df1, aes(x = price)) +
geom_density() +
labs(title = "Participants by price")
ggplot(df1, aes(x = price)) +
geom_density(fill = "indianred3") +
labs(title = "Participants by price")
ggplot(df2, aes(x = year)) +
geom_density(fill = "indianred3") +
labs(title = "Participants by Year")
df2 %>%
ggplot(aes(cty)) +
geom_histogram(binwidth = 1.25, color = "black",fill = "grey") +
labs(
title = "Distribution of cty",
x = "city",
y = "Number of cars"
)
df2 %>%
ggplot(aes(drv,cty)) +
geom_boxplot() +
labs(title = "Distribution of cty relative to Driving Mode",
x = "Driving Mode",
y = "cty-value")
library(plotly)
library(RColorBrewer)
library(ggplot2)
df1 = diamonds
head(df1)
cat("Number of instances  : ",nrow(df1))
cat("\nNumber of attributes : ",ncol(df1))
str(df1)
summary(df1)
table(df1$cut)
ggplot(df1, aes(x=factor(cut),fill = factor(cut))) +
geom_bar(color='black') +
labs(x = "Cut", y = "Count", title  = "Count of the quality of the Cut")
ggplot(df1,
aes(x = factor(cut), y = ..count.. / sum(..count..),fill = factor(cut))) +
geom_bar(color='black') +
labs(x = "Cut", y = "Percentage of Cuts", title  = "Percentage of the quality of the Cut") +
scale_y_continuous(labels = scales::percent)
ggplot(df1, aes(x = price)) +
geom_density(fill = "indianred3") +
labs(title = "Participants by price")
df2 = mpg
head(df2)
cat("Number of instances  : ",nrow(df2))
cat("\nNumber of attributes : ",ncol(df2))
str(df2)
summary(df2)
df2 %>%
summarize(variable = "cty",
q0.2 = quantile(cty, 0.2), ## 20% city values
q0.4 = quantile(cty, 0.4), ## 40% cty values
q0.6 = quantile(cty, 0.6), ## 60% cty values
q0.8 = quantile(cty, 0.8)) ## 80% cty values
df2 %>%
summarize(variable = "cty",
q0.2 = quantile(cty, 0.2), ## 20% city values
q0.4 = quantile(cty, 0.4), ## 40% cty values
q0.6 = quantile(cty, 0.6), ## 60% cty values
q0.8 = quantile(cty, 0.8)) ## 80% cty values
df2 %>%
summarize(
variable = "cty",
mean = mean(cty),
variance = var(cty),
standard_deviation = sd(cty),
Inter_Quartile_Range = IQR(cty)
)
library(plotly)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
library(plotly)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
df1 = diamonds
head(df1)
cat("Number of instances  : ",nrow(df1))
cat("\nNumber of attributes : ",ncol(df1))
str(df1)
summary(df1)
table(df1$cut)
ggplot(df1, aes(x=factor(cut),fill = factor(cut))) +
geom_bar(color='black') +
labs(x = "Cut", y = "Count", title  = "Count of the quality of the Cut")
ggplot(df1,
aes(x = factor(cut), y = ..count.. / sum(..count..),fill = factor(cut))) +
geom_bar(color='black') +
labs(x = "Cut", y = "Percentage of Cuts", title  = "Percentage of the quality of the Cut") +
scale_y_continuous(labels = scales::percent)
ggplot(df1, aes(x = price)) +
geom_density(fill = "indianred3") +
labs(title = "Participants by price")
df2 = mpg
head(df2)
cat("Number of instances  : ",nrow(df2))
cat("\nNumber of attributes : ",ncol(df2))
str(df2)
summary(df2)
df2 %>%
summarize(variable = "cty",
q0.2 = quantile(cty, 0.2), ## 20% city values
q0.4 = quantile(cty, 0.4), ## 40% cty values
q0.6 = quantile(cty, 0.6), ## 60% cty values
q0.8 = quantile(cty, 0.8)) ## 80% cty values
df2 %>%
summarize(
variable = "cty",
mean = mean(cty),
variance = var(cty),
standard_deviation = sd(cty),
Inter_Quartile_Range = IQR(cty)
)
df2 %>%
group_by(drv) %>%
summarize(mean_cty = mean(cty), Standard_Deviation_cty = sd(cty))
ggplot(df2,
aes(x = factor(cyl), y = ..count.. / sum(..count..),fill = factor(cyl))) +
geom_bar(color='black') +
labs(x = "Cylinders", y = "Percentage of Cylinders", title  = "Role of Number of Cylinders") +
scale_y_continuous(labels = scales::percent)
ggplot(df2, aes(factor(manufacturer),fill = factor(manufacturer))) +
geom_bar(color='black') +
labs(x = "Count", y = "Manufactures", title  = "Participation of Manufactures") +
coord_flip()
ggplot(df2, aes(x = year)) +
geom_density(fill = "indianred3") +
labs(title = "Participants by Year")
df2 %>%
ggplot(aes(cty)) +
geom_histogram(binwidth = 1.25, color = "black",fill = "grey") +
labs(
title = "Distribution of cty",
x = "city",
y = "Number of cars"
)
df2 %>%
ggplot(aes(drv,cty)) +
geom_boxplot() +
labs(title = "Distribution of cty relative to Driving Mode",
x = "Driving Mode",
y = "cty-value")
